connection.get(resource_uri, params).body
connection.class
c
n
connection.get(resource_uri, params).body
params
c
self.href
n
c
i1["links"].first["href"]
i1["links"]
i2 = new(i1)
i1["organization"]
i1["id"]
i1
i1.id
ref.body
i1.organization
i1
i1 = JSON.parse(ref.body)
ref = connection.post(resource_uri, remote_attribute_hash(write = true, post = true))
c
remote_attribute_hash(write = true, post = true)
quit
connection.class
c
n
remote_attribute_hash(write = true, post = true)
quit
remote_attribute_hash(write = true, post = true)
c
self.class.remote_attrs
remote_attribute_hash(write = true, post = true)
resource_uri
c
count
n
page
n
params
quit
f.login
f.lookupName
f.id
f = new(dummy)
dummy = hash.merge({href: resource_uri + '/' + hash["id"], connection: connection})
n
s
n
s
n
hash
s
n
hash
quit
connection.get(JSON.parse(a.body)["links"].first["href"])
JSON.parse(a.body)["links"].first["href"]
JSON.parse(a.body)["links"].first[:href]
JSON.parse(a.body)["links"]
JSON.parse(a.body).class
JSON.parse(a.body)["href"]
JSON.parse(a.body)[:href]
JSON.parse(a.body)
JSON.parse(a)
a
a["id"]
a
a = connection.get(dummy[:href])
connection.get(dummy[:href])
dummy
quit
{href: resource_uri + '/' + h["id"]}
h[:href]
{href: resource_uri + '/' + h["id"]}
h.merge({})
n
h.merge({})
h
n
s
n
h.merge({})
h
quit
c
Rnow::Contact.rnow_object.class
Rnow::Contact.rnow_object
Rnow::Contact.hash
h.merge({href: resource_uri + '/' + h["id"]})
h[:href]
h["id"]
h.merge({})
h
c
rows.map {|r| Hash[keys.zip r]}
rows
keys
quit
b.map {|array| Hash[a.zip array]}
Hash[a.zip b.zip]
Hash[a.zip b]
[a.zip c]
a.zip
Hash[a.zip c]
c = [ 7, 8, 9 ]
b = [[10, 11, 12], [20, 21, 22], [30, 31, 32]]
a = [ 4, 5, 6 ]
keys.zip
response["items"].first["rows"].first
response["items"].first["rows"]
keys
n
quit
n
response["items"].first["columnNames"]
response["items"].count
response["items"]
response
response["items"]["columnNames"]
quit
item["columnNames"]
item
quit
n
c
params
n
uri
n
params
count
page
n
params
quit
c
n
href
n
quit
href=item.delete["links"]
item
quit
n
c
JSON.parse(connection.get(resource_uri, params).body)["items"].first.merge({:connection => connection})
JSON.parse(connection.get(resource_uri, params).body)["items"].first
c
n
item
n
item={data: item}
item
n
pwd
item={data: item}
item={item}
item
quit
n
params={}
params
n
params={}
default_params
